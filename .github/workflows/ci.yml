name: Continuous Integration

on:
  - push
  - pull_request

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - operating-system: 'ubuntu-latest'
            php-version: '8.2'
            job-description: 'Ubuntu; PHP 8.2; latest-deps'

          - operating-system: 'ubuntu-latest'
            php-version: '8.2'
            composer-flags: '--prefer-lowest'
            job-description: 'Ubuntu; PHP 8.2; lowest-deps'

          - operating-system: 'ubuntu-latest'
            php-version: '8.3'
            job-description: 'Ubuntu; PHP 8.3; latest-deps'

          - operating-system: 'ubuntu-latest'
            php-version: '8.3'
            composer-flags: '--prefer-lowest'
            job-description: 'Ubuntu; PHP 8.3; lowest-deps'

          - operating-system: 'ubuntu-latest'
            php-version: '8.4'
            job-description: 'Ubuntu; PHP 8.4; latest-deps'

          - operating-system: 'ubuntu-latest'
            php-version: '8.4'
            composer-flags: '--prefer-lowest'
            job-description: 'Ubuntu; PHP 8.4; lowest-deps'

          #- operating-system: 'windows-latest'
          #  php-version: '8.4'
          #  job-description: 'Windows; PHP 8.4; latest-deps'

          #- operating-system: 'macos-latest'
          #  php-version: '8.4'
          #  job-description: 'MacOS; PHP 8.4; latest-deps'


    name: ${{ matrix.job-description }}
    runs-on: ${{ matrix.operating-system }}

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
          - 3306:3306
      manticore:
        image: manticoresearch/manticore
        ports:
          - 9306:9306
      pgsql:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      valkey:
        image: valkey/valkey
        ports:
          - 6379:6379

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Angie
        run: |
          sudo curl -o /etc/apt/trusted.gpg.d/angie-signing.gpg https://angie.software/keys/angie-signing.gpg
          echo "deb https://download.angie.software/angie/$(. /etc/os-release && echo "$ID/$VERSION_ID $VERSION_CODENAME") main" | sudo tee /etc/apt/sources.list.d/angie.list > /dev/null
          sudo apt update
          sudo apt install -y angie

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: apcu, pcre, mbstring, json, pdo_mysql, pdo_pgsql, pdo_sqlite
          coverage: none
          tools: composer:v2

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          retry_wait_seconds: 30
          command: |
            composer update --optimize-autoloader --no-interaction --ansi --no-progress --prefer-dist ${{ matrix.composer-flags }}
            composer info -D

      - name: Tests
        run: vendor/bin/phpunit --configuration phpunit.xml.dist
